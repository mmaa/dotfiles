#!/usr/bin/env ruby

require "timeout"

@start_time = Time.now

def formatted(string)
  "\e[1m\e[35m#{string}\e[0m"
end

def log_exit
  elapsed_time = (Time.now - @start_time).round(1)
  puts formatted("Done (#{elapsed_time}s)")
  exit
end

system "brew update --verbose"
outdated = `brew outdated --verbose`

pinned, upgradable = outdated.lines.partition { |line| line =~ /pinned/ }
log_exit unless upgradable.any?

puts formatted("Pinned:"), pinned.join if pinned.any?
puts formatted("Upgradable:"), upgradable.join
print "#{formatted("Upgrade? [y/N]")} \e[1m\e[34m"

input = begin
          Timeout::timeout(30) do
            gets.strip.downcase
          end
        rescue Timeout::Error
          puts "[timed out]\e[0m"
          log_exit
        end

log_exit unless input == "y"

system "brew upgrade --ignore-pinned"
system "brew cleanup"
log_exit
